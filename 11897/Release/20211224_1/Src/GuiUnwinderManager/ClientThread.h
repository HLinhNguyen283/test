/**
	* @file	ClientThread.h
	* @brief	UWへの要求送信スレッド ヘッダーファイル
	* @author	cec K.Miyachi
	* @date		2021/12/07 cec K.Miyachi 新規作成
**/
#pragma once

/**
* @brief JI JMF通信 JMFを送信するスレッド
*/
class CWriteDebugLog;
class CClientThread
{
public:
	/* ==================================================================================================== */
	/**
		* @brief  CClientThread コンストラクション
	**/
	/* ==================================================================================================== */
	CClientThread();

	/* ==================================================================================================== */
	/**
		* @brief  CClientThread デストラクション
	**/
	/* ==================================================================================================== */
	virtual ~CClientThread();

	/* ==================================================================================================== */
	/**
		* @brief  スレッドを起動する
		* @param  pParent       　: [i]親画面のウィンドウハンドル
		* @retval スレッドＩＤ
	**/
	/* ==================================================================================================== */
	UINT Start( CWnd* pParent );

	/* ==================================================================================================== */
	/**
		* @brief  スレッドメインループ
		* @retval 0(固定)
	**/
	/* ==================================================================================================== */
	UINT MainLoop();

	HANDLE GetThreadHandle() { return m_hThread; }

private:
/* ==================================================================================================== */
/**
	* @brief  受信スレッド
	* @param  pData : [i]CClientThreadのポインタ
	* @retval 0(固定)
**/
/* ==================================================================================================== */
	static UINT __stdcall ThreadFunction( void* pData );

public:
	CWnd*				m_pParent;				//!< スレッド呼び出し側クラス
	HANDLE				m_hThread;				//!< スレッドハンドル
	CWriteDebugLog*		m_pWriteLog;			//!< ログクラスポインタ
	HANDLE				m_hInitEvent;			//!< 初期化完了イベントハンドル
};