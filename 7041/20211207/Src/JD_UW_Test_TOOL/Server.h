/**
 * @file  Server.h
 * @brief UWからの要求受信 ヘッダーファイル
 * @author screen
 * @date  20210720 screen 新規作成
 **/
#pragma once

#include "CommonNet.h"

/**
* JI JMF通信 JMFを受信するクラス
* 共通部分のメソッド
* @brief JI JMF通信 JMFを受信するクラス
*/
class CWriteDebugLog;
class CServer
{
public:
	/* ==================================================================================================== */
	/**
		* @brief  CServer コントラクション
		* @param  pParent       　: [i]親画面のウィンドウハンドル
		* @param  pWriteDebugLog  : [i]ログクラスのポインタ
	**/
	/* ==================================================================================================== */
	CServer(CWnd* pParent, CWriteDebugLog* pWriteDebugLog);

	/* ==================================================================================================== */
	/**
		* @brief  CServer デストラクション
	**/
	/* ==================================================================================================== */
	virtual ~CServer();

	/* ==================================================================================================== */
	/**
		* @brief  サーバー(UWからのJMFを受信する処理)
	**/
	/* ==================================================================================================== */
	void HttpServerMain();

private:
	/* ==================================================================================================== */
	/**
		* @brief  POSTであった場合のレスポンスを送信する
		* @param  hReqQueue		: [i]CServerThreadのポインタ
		* @param  pHttpRequest	: [i]CServerThreadのポインタ
		* @retval 0(固定)
	**/
	/* ==================================================================================================== */
	DWORD SendHttpPostResponse(HANDLE hReqQueue, PHTTP_REQUEST pHttpRequest);

	/* ==================================================================================================== */
	/**
		* @brief  レスポンスのJMFを作成する
		* @param  INpHttpBodyBuffer	: [i]受信JMF
		* @retval レスポンスのJMFデータ
	**/
	/* ==================================================================================================== */
	CString MakeResponseJMF(char* INpHttpBodyBuffer);

private:
	CWnd*				m_pParent;				//!< スレッド呼び出し側クラス
	CWriteDebugLog*		m_pWriteLog;			//!< ログクラスポインタ
};